{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","img","useState","currentIndex","setCurrentIndex","carouselListRef","useRef","imgWight","setImgWidth","frameWight","setFrameWight","step","setStep","animDuration","setAnimDuration","scrollContainer","amount","carouselList","current","imageWidth","newIndex","length","newScrollAmount","style","transform","className","ref","map","currImg","index","src","alt","type","onClick","value","min","max","placeholder","onChange","event","newImgWidth","parseInt","target","carouselImgElements","document","querySelectorAll","Array","from","forEach","imgElement","HTMLImageElement","imgElementCopy","cloneNode","width","parentElement","replaceChild","containerElement","querySelector","newContainerWidth","newFrameWidth","newStep","newAnimDuration","transition","App","state","images","this","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8dc656cc.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  img: string[];\n}\n\nconst Carousel: React.FC<Props> = ({ img }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselListRef = useRef<HTMLUListElement>(null);\n\n  const [imgWight, setImgWidth] = useState<number>(130);\n  const [frameWight, setFrameWight] = useState<number>(3);\n  const [step, setStep] = useState<number>(3);\n  const [animDuration, setAnimDuration] = useState<number>(1000);\n\n  const scrollContainer = (amount: number) => {\n    const carouselList = carouselListRef.current;\n    const imageWidth = imgWight;\n    const newIndex = currentIndex + amount;\n\n    if (newIndex >= 0 && newIndex < img.length) {\n      setCurrentIndex(newIndex);\n      const newScrollAmount = newIndex * imageWidth;\n\n      if (carouselList) {\n        carouselList.style.transform = `translateX(-${newScrollAmount}px)`;\n      }\n    }\n  };\n\n  const handleImgWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newImgWidth = parseInt(event.target.value, 10);\n\n    setImgWidth(newImgWidth);\n\n    const carouselImgElements = document.querySelectorAll('.Carousel__img');\n\n    const imgElementsArray = Array\n      .from(carouselImgElements) as HTMLImageElement[];\n\n    imgElementsArray.forEach((imgElement) => {\n      if (imgElement instanceof HTMLImageElement) {\n        const imgElementCopy = imgElement.cloneNode(true) as HTMLImageElement;\n\n        imgElementCopy.style.width = `${newImgWidth}px`;\n        imgElement.parentElement?.replaceChild(imgElementCopy, imgElement);\n      }\n    });\n\n    const containerElement = document.querySelector('.Carousel__container');\n    const containerElementCopy = containerElement as HTMLElement;\n    const newContainerWidth = newImgWidth * step;\n\n    containerElementCopy.style.width = `${newContainerWidth}px`;\n  };\n\n  const handleFrameWidthChange = (event: React\n    .ChangeEvent<HTMLInputElement>) => {\n    const newFrameWidth = parseInt(event.target.value, 10);\n\n    setFrameWight(newFrameWidth);\n    scrollContainer(0);\n\n    const containerElement = document.querySelector('.Carousel__container');\n    const containerElementCopy = containerElement as HTMLElement;\n    const newContainerWidth = newFrameWidth * imgWight;\n\n    containerElementCopy.style.width = `${newContainerWidth}px`;\n  };\n\n  const handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newStep = parseInt(event.target.value, 10);\n\n    setStep(newStep);\n  };\n\n  const handleAnimDurationChange = (event: React\n    .ChangeEvent<HTMLInputElement>) => {\n    const newAnimDuration = parseInt(event.target.value, 10);\n\n    setAnimDuration(newAnimDuration);\n\n    const carouselList = document.querySelector('.Carousel__list');\n    const carouselListCopy = carouselList as HTMLElement;\n\n    carouselListCopy.style.transition = `transform ${newAnimDuration}ms ease-in`;\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <ul className=\"Carousel__list\" ref={carouselListRef}>\n          {img.map((currImg, index) => (\n            <li\n              key={`${index + 1}`}\n              className=\"Carousel__item\"\n            >\n              <img\n                src={currImg}\n                alt={`${index}`}\n                className=\"Carousel__img\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__control\">\n        <button\n          type=\"button\"\n          className=\"Carousel__btn Carousel__btn_prev\"\n          onClick={() => scrollContainer(-step)}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__btn Carousel__btn_next\"\n          data-cy=\"next\"\n          onClick={() => scrollContainer(step)}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"Carousel__inputs\">\n        <label className=\"Carousel__label\">\n          Image width\n          <input\n            type=\"number\"\n            value={imgWight}\n            min={50}\n            max={350}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers in px\"\n            onChange={handleImgWidthChange}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Images in the carousel\n          <input\n            type=\"number\"\n            value={frameWight}\n            min={1}\n            max={5}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers in px\"\n            onChange={handleFrameWidthChange}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Step\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={5}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers\"\n            onChange={handleStepChange}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Animation duration\n          <input\n            type=\"number\"\n            value={animDuration}\n            step={500}\n            min={500}\n            max={2500}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers is seconds\"\n            onChange={handleAnimDurationChange}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <div className=\"container\">\n          <h1\n            data-cy=\"title\"\n          >\n            {`Carousel with ${images.length} images`}\n          </h1>\n\n          <Carousel\n            img={this.state.images}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}