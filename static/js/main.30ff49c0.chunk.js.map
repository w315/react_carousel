{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","img","useState","currentIndex","setCurrentIndex","carouselListRef","useRef","frameWight","setFrameWight","step","setStep","animDuration","setAnimDuration","scrollContainer","amount","carouselList","current","imageWidth","querySelector","offsetWidth","newIndex","length","newScrollAmount","style","transform","className","ref","map","currImg","index","src","alt","type","onClick","value","min","max","placeholder","onChange","event","newFrameWidth","parseInt","target","newContainerWidth","document","width","newStep","newAnimDuration","transition","App","state","images","this","React","Component","ReactDOM","render","getElementById"],"mappings":"gQA+IeA,EAxImB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACnC,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAkBC,iBAAyB,MAEjD,EAAoCJ,mBAAiB,GAArD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,mBAAiB,GAAzC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAwCR,mBAAiB,KAAzD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMC,EAAkB,SAACC,GAAoB,IAAD,EACpCC,EAAeV,EAAgBW,QAC/BC,GAAyB,OAAZF,QAAY,IAAZA,GAAA,UAAAA,EAAcG,cAAc,aAA5B,eAAmCC,cAAe,EAC/DC,EAAWjB,EAAeW,EAEhC,GAAIM,GAAY,GAAKA,EAAWnB,EAAIoB,OAAQ,CAC1CjB,EAAgBgB,GAChB,IAAME,EAAkBF,EAAWH,EAE/BF,IACFA,EAAaQ,MAAMC,UAAnB,sBAA8CF,EAA9C,UAqCN,OACE,sBAAKG,UAAU,WAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,oBAAIA,UAAU,iBAAiBC,IAAKrB,EAApC,SACGJ,EAAI0B,KAAI,SAACC,EAASC,GAAV,OACP,oBAEEJ,UAAU,iBAFZ,SAIE,qBACEK,IAAKF,EACLG,IAAG,UAAKF,GACRJ,UAAU,mBAPd,UACUI,EAAQ,WAaxB,sBAAKJ,UAAU,oBAAf,UACE,wBACEO,KAAK,SACLP,UAAU,mCACVQ,QAAS,kBAAMpB,GAAiBJ,IAHlC,kBAQA,wBACEuB,KAAK,SACLP,UAAU,mCACV,UAAQ,OACRQ,QAAS,kBAAMpB,EAAgBJ,IAJjC,qBAUF,sBAAKgB,UAAU,mBAAf,UACE,wBAAOA,UAAU,kBAAjB,mCAEE,uBACEO,KAAK,SACLE,MAAO3B,EACP4B,IAAK,EACLC,IAAK,EACLX,UAAU,kBACVY,YAAY,sBACZC,SAhFqB,SAACC,GAE9B,IAAMC,EAAgBC,SAASF,EAAMG,OAAOR,MAAO,IAEnD1B,EAAcgC,GACd3B,EAAgB,GAEhB,IAEM8B,EAAoC,IAAhBH,EAFDI,SAAS1B,cAAc,wBAI3BK,MAAMsB,MAA3B,UAAsCF,EAAtC,YAwEI,wBAAOlB,UAAU,kBAAjB,iBAEE,uBACEO,KAAK,SACLE,MAAOzB,EACP0B,IAAK,EACLC,IAAKnC,EAAIoB,OAAS,EAClBI,UAAU,kBACVY,YAAY,gBACZC,SA9Ee,SAACC,GACxB,IAAMO,EAAUL,SAASF,EAAMG,OAAOR,MAAO,IAE7CxB,EAAQoC,SA8EJ,wBAAOrB,UAAU,kBAAjB,+BAEE,uBACEO,KAAK,SACLE,MAAOvB,EACPF,KAAM,IACN0B,IAAK,IACLC,IAAK,KACLX,UAAU,kBACVY,YAAY,2BACZC,SArFuB,SAACC,GAEhC,IAAMQ,EAAkBN,SAASF,EAAMG,OAAOR,MAAO,IAErDtB,EAAgBmC,GAEKH,SAAS1B,cAAc,mBAG3BK,MAAMyB,WAAvB,oBAAiDD,EAAjD,2BCnDEE,E,4MACJC,MAAQ,CACNC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWC,KAAKF,MAAhBC,OAER,OACE,qBAAK1B,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,oBACE,UAAQ,QADV,iCAGoB0B,EAAO9B,OAH3B,aAMA,cAAC,EAAD,CACEpB,IAAKmD,KAAKF,MAAMC,kB,GA9BVE,IAAMC,WAsCTL,IC3CfM,IAASC,OAAO,cAAC,EAAD,IAASZ,SAASa,eAAe,W","file":"static/js/main.30ff49c0.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  img: string[];\n}\n\nconst Carousel: React.FC<Props> = ({ img }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselListRef = useRef<HTMLUListElement>(null);\n\n  const [frameWight, setFrameWight] = useState<number>(3);\n  const [step, setStep] = useState<number>(3);\n  const [animDuration, setAnimDuration] = useState<number>(1000);\n\n  const scrollContainer = (amount: number) => {\n    const carouselList = carouselListRef.current;\n    const imageWidth = carouselList?.querySelector('li')?.offsetWidth || 0;\n    const newIndex = currentIndex + amount;\n\n    if (newIndex >= 0 && newIndex < img.length) {\n      setCurrentIndex(newIndex);\n      const newScrollAmount = newIndex * imageWidth;\n\n      if (carouselList) {\n        carouselList.style.transform = `translateX(-${newScrollAmount}px)`;\n      }\n    }\n  };\n\n  const handleFarmeWidthChange = (event: React\n    .ChangeEvent<HTMLInputElement>) => {\n    const newFrameWidth = parseInt(event.target.value, 10);\n\n    setFrameWight(newFrameWidth);\n    scrollContainer(0);\n\n    const containerElement = document.querySelector('.Carousel__container');\n    const containerElementCopy = containerElement as HTMLElement;\n    const newContainerWidth = newFrameWidth * 130;\n\n    containerElementCopy.style.width = `${newContainerWidth}px`;\n  };\n\n  const handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newStep = parseInt(event.target.value, 10);\n\n    setStep(newStep);\n  };\n\n  const handleAnimDurationChange = (event: React\n    .ChangeEvent<HTMLInputElement>) => {\n    const newAnimDuration = parseInt(event.target.value, 10);\n\n    setAnimDuration(newAnimDuration);\n\n    const carouselList = document.querySelector('.Carousel__list');\n    const carouselListCopy = carouselList as HTMLElement;\n\n    carouselListCopy.style.transition = `transform ${newAnimDuration}ms ease-in`;\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <ul className=\"Carousel__list\" ref={carouselListRef}>\n          {img.map((currImg, index) => (\n            <li\n              key={`${index + 1}`}\n              className=\"Carousel__item\"\n            >\n              <img\n                src={currImg}\n                alt={`${index}`}\n                className=\"Carousel__img\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__control\">\n        <button\n          type=\"button\"\n          className=\"Carousel__btn Carousel__btn_prev\"\n          onClick={() => scrollContainer(-step)}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__btn Carousel__btn_next\"\n          data-cy=\"next\"\n          onClick={() => scrollContainer(step)}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"Carousel__inputs\">\n        <label className=\"Carousel__label\">\n          Images in the carousel\n          <input\n            type=\"number\"\n            value={frameWight}\n            min={1}\n            max={5}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers in px\"\n            onChange={handleFarmeWidthChange}\n          />\n        </label>\n        <label className=\"Carousel__label\">\n          Step\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={img.length - 1}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers\"\n            onChange={handleStepChange}\n          />\n        </label>\n        <label className=\"Carousel__label\">\n          Animation duration\n          <input\n            type=\"number\"\n            value={animDuration}\n            step={500}\n            min={500}\n            max={2500}\n            className=\"Carousel__input\"\n            placeholder=\"Enter numbers is seconds\"\n            onChange={handleAnimDurationChange}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <div className=\"container\">\n          <h1\n            data-cy=\"title\"\n          >\n            {`Carousel with ${images.length} images`}\n          </h1>\n\n          <Carousel\n            img={this.state.images}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}